#!/usr/bin/perl -w
# This script (sophomorix-test-2) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# Bibliotheken
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 check_options
                                 time_stamp_AD 
                                 get_passwd_charlist
                                 get_plain_password
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_ou_add
                                 AD_bind_admin
                                 AD_unbind_admin
                                 AD_dns_get
                                 AD_user_create
                                 AD_workstation_create
                                 AD_group_create
                                 AD_group_addmember
                                 AD_user_kill
                                 AD_object_search
                                 AD_get_name_tokened
                                    );
use Sophomorix::SophomorixTest qw(
                                 AD_object_nonexist
                                 AD_test_object
                                 );

$Conf::log_level=1;
my $help=0;

my $copy_wsfile_1=0;
my $test_ws_1=0;


my $add_ws=0;
my $test_add_ws=0;
my $kill_ws=0;
my $test_kill_ws=0;


my $ou="";
my $school_token="";
my $room="";
my $computer="";
my $role="";
# calculated

my $login="";
my $plain_password;
my $ws_count=0;
my $birthdate="1970-01-01";

my $testopt=GetOptions(
           "help|h" => \$help,
           "verbose|v+" => \$Conf::log_level,
           "copy-wsfile-1" => \$copy_wsfile_1,
           "test-ws-1" => \$test_ws_1,
  );


# Prüfen, ob Optionen erkannt wurden, sonst Abbruch
&check_options($testopt);




my ($ldap,$root_dse) = &AD_bind_admin();
my $root_dns=&AD_dns_get($root_dse);


# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlsbeschreibung
   print('
sophomorix-test-2 tests the addition of ExamAccounts and workstation accounts.

Options
  -h  / --help

Step by step Test:
  Copy workstations/classrooms file (Step 1):
      sophomorix-test-2 --copy-wsfile-1
  Import the file:
      sophomorix-workstation
  Run the tests:
      sophomorix-test-2 --test-ws-1

');
   print "\n";
   exit;
}




############################################################
# Check preliminaries
############################################################
my $host_workstation=$DevelConf::path_conf_host."/workstations";
my $host_classroom=$DevelConf::path_conf_host."/classrooms";
my $testdata="/usr/share/sophomorix-developer/testdata";
my $wsfile_1=$testdata."/workstations-1";
my $crfile_1=$testdata."/classrooms-1";



my $time_stamp_AD=&time_stamp_AD();
my @passwort_zeichen=&get_passwd_charlist();
# ou's that have been created in this script
my %ou_created=();
$ou_created{$ou}="created";
my $room_token;
my $login_token;
my $examaccount_token;


# --copy-wsfile-1
if ($copy_wsfile_1==1){
    # copy workstations_1
    system("cp -v $wsfile_1 $host_workstation");
    system("cp -v $crfile_1 $host_classroom");
}



if ($test_ws_1==1){
    # j1008p01
    &AD_test_object({ldap=>$ldap,
                   dn=>"CN=bsz-j1008p01,OU=bsz-j1008,OU=ExamAccounts,OU=BSZLEO,".$root_dse,
                   #####
                   displayName=>"Exam Account",
                   givenName=>"Exam",
                   name=>"bsz-j1008p01",
                   sAMAccountname=>"bsz-j1008p01",
                   sn=>"Account",
                   sophomorixAdminClass => "bsz-j1008",
                   sophomorixExitAdminClass => "unknown",
                   #sophomorixFirstPassword => "Muster!",
                   sophomorixFirstnameASCII => "Exam",
                   sophomorixSurnameASCII  => "Account",
                   sophomorixRole => "examaccount",
                   sophomorixSchoolPrefix => "bsz",
                   sophomorixSchoolname => "BSZLEO",
                   memberOf => "bsz-j1008",
                   not_memberOf => "bsz-students,teachers,bsz-teachers,lin-teachers",
                  });
    ##### Testing the exam accounts room
    &AD_test_object({ldap=>$ldap,
                   dn=>"CN=bsz-j1008,OU=Rooms,OU=BSZLEO,".$root_dse,
                   sAMAccountname=>"bsz-j1008",
                   memberOf => "bsz-examaccounts",
                   not_memberOf => "bsz-teachers",
                  });
    ##### Testing the examaccounts <token>-examaccounts group
    &AD_test_object({ldap=>$ldap,
                   dn=>"CN=bsz-examaccounts,OU=Rooms,OU=BSZLEO,".$root_dse,
                   sAMAccountname=>"bsz-examaccounts",
                   memberOf => "multi-examaccounts",
                   not_memberOf => "teachers,students",
                  });

    # J1008P01$
    &AD_test_object({ldap=>$ldap,
                   dn=>"CN=BSZ-J1008P01,OU=bsz-j1008,OU=Workstations,OU=BSZLEO,".$root_dse,
                   #####
                   displayName=>"Workstation BSZ-J1008P01",
                   name=>"BSZ-J1008P01",
                   cn=>"BSZ-J1008P01",
                   sAMAccountname=>"BSZ-J1008P01\$",
                   #sophomorixFirstPassword => "Muster!",
                   sophomorixRole => "workstation",
                   accountExpires => "9223372036854775807",
                   dNSHostName => "BSZ-J1008P01.".$root_dns,
                   sophomorixSchoolPrefix => "bsz",
                   sophomorixSchoolname => "BSZLEO",
                   servicePrincipalName => "HOST/BSZ-J1008P01,".
                                           "HOST/BSZ-J1008P01.".$root_dns.",".
                                           "RestrictedKrbHost/BSZ-J1008P01,".
                                           "RestrictedKrbHost/BSZ-J1008P01.".$root_dns.",",
                  });
}

############################################################
# Delete Accounts
############################################################
# --kill-ea  
#if ($kill_ea==1){
#    &AD_user_kill({ldap=>$ldap,
#                   root_dse=>$root_dse,
#                   login=>"bsz-j1010p01",
#                   user_count=>1,
#                   identifier=>$identifier_to_kill
#                  });
#}
############################################################
# Check deletion
############################################################


## --test-kill-ea  
#if ($test_kill_ea==1){
#
#&AD_object_nonexist($ldap,$root_dse,"user","j1010p01");
#&AD_object_nonexist($ldap,$root_dse,"user","j1010p02");
#
#}

&AD_unbind_admin($ldap);



