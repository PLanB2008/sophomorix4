#!/usr/bin/perl -w
# This script (sophomorix-test) is maintained by RÃ¼diger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# modules
use strict;
#use Quota;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
#use IMAP::Admin;
#use DBI;
use Net::LDAP;
#use Test::More "no_plan";
use Config::IniFiles;
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 

# for smb://
use POSIX;
use Filesys::SmbClient;

use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 NTACL_set_file
                                 unlock_sophomorix
                                 json_dump
                                 lock_sophomorix
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 backup_auk_file
                                 get_passwd_charlist
                                 filelist_fetch
                                 get_plain_password
                                 check_options
                                 config_sophomorix_read
                                 result_sophomorix_init
                                 );
use Sophomorix::SophomorixTest qw(
                                 file_test_lines
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_create
                                 AD_bind_admin
                                 AD_get_user
                                 AD_user_kill
                                 AD_remove_sam_from_sophomorix_attributes
                                 AD_dns_get
                                 AD_unbind_admin
                                 AD_user_create
                                 AD_object_search
                                 AD_object_move
                                 AD_group_create
                                 AD_group_addmember
                                 AD_get_name_tokened
                                 AD_login_test
                                 AD_get_AD
                                 AD_repdir_using_file
                                 AD_get_schoolname
                                 AD_dns_zonecreate
                                 next_free_uidnumber_set
                                 next_free_uidnumber_get
                                    );

$Conf::log_level=1;
my $help=0;


# OK:
# sophomorix-minitest -l 22
# sophomorix-minitest --length 22 -w 30 --info
# 
my %opt = ();
my $testopt=GetOptions (\%opt, 'length|l=i', 
                               'width|w=i',
                               'info|i',
                       );    


print Dumper (\%opt);


# Parsen der Optionen
my $testopt2=GetOptions(
           "verbose|v+" => \$Conf::log_level,
           "help|h" => \$help
          );

my %sophomorix_result=&result_sophomorix_init("sophomorix-school");

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin();
my $root_dns=&AD_dns_get($root_dse);
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse,\%sophomorix_result);
my @filelist=&filelist_fetch({filetype=>"users",
                              sophomorix_config=>\%sophomorix_config,
                            });



############################################################
# BEGIN: Test code goes here
############################################################

print STDOUT "Test STDOUT\n";
print STDERR "Test STDERR\n";
exit 88;

#my $cfg = Config::IniFiles->new( -file => "/usr/share/sophomorix/devel/master/school.conf.master", 
#                                 -handle_trailing_comment => 1
#                               );

# show errors
#print @Config::IniFiles::errors;

#print "The value is >" . $cfg->val( 'school', 'MAILQUOTA_DEFAULT_TEACHER' ) . "<\n" 
#    if $cfg->val( 'school', 'MAILQUOTA_DEFAULT_TEACHER' );

#print "The value is >" . $cfg->val( 'managementgroup.wifi', 'allow_group' ) . "<.\n" 
#   if $cfg->val( 'managementgroup.wifi', 'allow_group' );

#my %ini;
#tie %ini, 'Config::IniFiles', ( -file => "/usr/share/sophomorix/devel/master/school.conf.master", 
#                                -handle_trailing_comment => 1
#                              );
#print Dumper(\%ini);


# my %master=();
# &read_ini_file("/usr/share/sophomorix/devel/master/school.conf.master");

# print Dumper(\%master);

# print "We have >".$master{'managementgroup.wifi'}{'allow_group'}."<\n";
# # if ${managementgroup.wifi}{allow_group};


# # walk through all parameters
# foreach my $section ( keys %master ) {
#     print "Section: $section\n";
#     foreach my $parameter ( keys %{$master{$section}} ) {
#         print "    Parameter: $parameter -> >$master{$section}{$parameter}<\n";
#     }
# }

# foreach my $parameter ( keys %{$master{'managementgroup.wifi'}} ) {
#     print "Parameter: $parameter\n";
# }


# sub read_ini_file {
#     my ($filename)=@_;
#     tie %master, 'Config::IniFiles', ( -file => "/usr/share/sophomorix/devel/master/school.conf.master", 
#                                        -handle_trailing_comment => 1
#                                      );
# }

#&file_test_lines("/etc/linuxmuster/sophomorix/sophomorix.conf",11,"ltg","bsz");

# my @list=("one","two");

# foreach my $num (@list){
#     my $update=0;
#     my $stat="---";

#     print "$num UP1: $update $stat\n";
#     &increase_update(\$update,\$stat);
#     print "$num UP2: $update $stat\n";
# }

# sub increase_update {
#     my ($update,$stat_ref)=@_;
#     ${$update}++;
#     ${$stat_ref}="T";
# }





#my $object="halldoha";
#my $object="7a";

#&AD_remove_sam_from_sophomorix_attributes($ldap,$root_dse,"user",$object);

# my ($ref_AD) = &AD_get_AD({ldap=>$ldap,
#                            root_dse=>$root_dse,
#                            root_dns=>$root_dns,
#                            computers=>"FALSE",
#                            rooms=>"FALSE",
#                            administratorclasses=>"TRUE",
#                            teacherclasses=>"FALSE",
# #                           examaccounts=>"TRUE",
#                            users=>"TRUE",
#                            dnszones=>"FALSE",
#                            dnsnodes=>"FALSE",
#              });
# my %AD= %$ref_AD; 


# #creating ONE administrator home in ONE school:
#               &AD_repdir_using_file({root_dns=>$root_dns,
#                                    repdir_file=>"repdir.teacher_home",
#                                    school=>"bsz",
#                                    administrator_home=>"uli",
#                                    teacherclass=>"teachers",
#                                    sophomorix_config=>\%sophomorix_config,
#                                  });

# my ($homedirectory_new,$unix_home_new)=
#        &Sophomorix::SophomorixBase::get_homedirectory($root_dns,
#                                                       $school_new,
#                                                       $group_new_basename,
#                                                       $user,
#                                                       $role_new);
# my ($homedirectory_new,$unix_home_new,$unc,$smb_rel_path)=
#        &Sophomorix::SophomorixBase::get_homedirectory($root_dns,
#                                                       "bsz",
#                                                       "7a",
#                                                       "maierle",
#                                                       "teacher");




#print "$homedirectory_new\n";
#print "$unix_home_new\n";
#print "$unc\n";
#print "$smb_rel_path\n";

# my $smb = new Filesys::SmbClient(username  => "administrator",
#                                    password  => "Muster!",
# #                                   workgroup => "alian",
#                                    debug     => 1);



#   $smb->rmdir_recurse("smb://linuxmuster.local/bsz/students/alumni/homes/oe42")
#     or print "Error rmdir_recurse: ", $!, "\n";




############################################################
# END: Test code goes here
############################################################

&AD_unbind_admin($ldap);

