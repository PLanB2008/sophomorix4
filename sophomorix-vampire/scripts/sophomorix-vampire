#!/usr/bin/perl -w
# This script (sophomorix-project) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  jeffbeck@linuxmuster.net



# ===========================================================================
# Bibliotheken
# ===========================================================================
use strict;
#use Quota;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use List::MoreUtils qw(uniq);
#use IMAP::Admin;
#use DBI;
use Net::LDAP;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 check_options
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                    );

my @arguments = @ARGV;


# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

# Variablen für Optionen
$Conf::log_level=1;
my $help=0;
my $info=0;
my $datadir="/root/linuxmuster6";
my $sophomorix_add_output="/root/sophomorix.add";


my @files=(
            "/viewdump/userdata_view.sql",
#            "/viewdump/classdata_view.sql",
#            "/viewdump/projectdata_view.sql",
#            "/viewdump/memberdata_view.sql",
#           "/var/log/sophomorix/pg2ldif/accounts.sql_mini",
#           "/var/log/sophomorix/pg2ldif/groups.sql",
#           "/var/log/sophomorix/pg2ldif/groups_users.sql",
          );

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "datadir=s" => \$datadir,
           "verbose|v+" => \$Conf::log_level,
         );

# Prüfen, ob Optionen erkannt wurden
&check_options($testopt);

# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-vampire imports users, classes and projects from a linuxmuster.net 6.x server 

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose

1. Exporting user data on linuxmusternet6 server:

   sophomorix-dump-pg2ldap --dump
   sophomorix-project --dump /root/projects.dump
   dump-postgres-views.sh root/viewdump

2. Saving the following file in a directory, i.e. /root/migration:

   /root/projects.dump
   /root/viewdump/

2. Saving /etc/sophomorix in a directory, i.e. /root/migration/etc/sophomorix:
3. Saving /var/lib/sophomorix in a directory, i.e. /root/migration/var/lib/sophomorix
4. Saving /var/log/sophomorix in a directory, i.e. /root/migration/var/log/sophomorix


Getting information:
  -i / --info

Configuring:
  --datadir /path/to/migration/files


Please see the sophomorix-vampire(8) man pages for full documentation
');
   print "\n";
   exit;
}


my $missig_files_count=0;
print "Testing files in ${datadir}:\n";
foreach my $file (@files){
    my $abs_file=$datadir.$file;
    if (-f $abs_file){
        print "     OK: $abs_file\n";    
    } else {
        print "  ERROR: $abs_file\n";    
	$missig_files_count++;
    }
}

if ($missig_files_count > 0){
    print "\nERROR: $missig_files_count file for migration are missing\n\n";
    exit;
}


# --info
if ($info==1){
    
    exit;
}

# creating sophomorix.add
my $account_sql=$datadir.$files[0];
open(ACCOUNTS,"<$account_sql") || die;
open(SOPHOMORIXADD,">$sophomorix_add_output") || die;

my $line_number=0;
my %tags=();
while(<ACCOUNTS>){
    my $line=$_;
    $line_number++;
    my @attrs=split(/\|/,$line);
    my $count=0;
    print "Line $line_number:\n";
    if ($line_number==1){
        foreach my $attr (@attrs){
            $attr=~s/^\s+//g;# remove leading whitespace
            $attr=~s/\s+$//g;# remove trailing whitespace
            print "   $count: * >$attr<\n";
            $tags{$count}=$attr;
            $count++;
        }
    } else {
        my %line=();
        my $role="";
        my $skip_line=0;
        foreach my $attr (@attrs){
            $attr=~s/^\s+//g;# remove leading whitespace
            $attr=~s/\s+$//g;# remove trailing whitespace
            print "   $count: $tags{$count}: >$attr<\n";
            $line{$tags{$count}}=$attr;
            $count++;
        }
        if ($line{"homedirectory"}=~m/\/home\/teachers\//){
	    print "$line{'uid'} teacher\n";
            $role="teacher";
        } elsif ($line{"homedirectory"}=~m/\/home\/students\//){
            $role="student";
        } else {
            # exam accounts are skipped
            $skip_line=1;
        }
        if ($line{"unid"} eq""){
            $line{"unid"}="---";
        }
        my ($year,$month,$day) = split(/-/,$line{"birthday"});
        my $birthdate=$day.".".$month.".".$year;

        # create_line
        my $line= $line{"gid"}."::".
                  $line{"surname"}.";".
                  $line{"firstname"}.";".
                  $birthdate."::".
                  $line{"uid"}."::".
                  "---"."::".
                  $line{"uidnumber"}."::".
                  $line{"gidnumber"}."::".
                  $line{"unid"}."::".
                  "---"."::".
                  "---"."::".
                  $role."::".
                  $line{"firstname"}."::".
                  $line{"surname"}."::\n";
        if ($skip_line==0){
	    print $line;
	    print SOPHOMORIXADD $line;
        }
    }
    print "\n";
}
close(ACCOUNTS);
close(SOPHOMORIXADD);



&log_script_start(@arguments);


#my ($ldap,$root_dse) = &AD_bind_admin();
#&AD_unbind_admin($ldap);

&log_script_end(@arguments);
