#!/usr/bin/perl -w
# This script (sophomorix-quota) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# modules
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use List::MoreUtils qw(uniq);
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 
use Net::LDAP;
use JSON;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 time_stamp_AD
                                 time_stamp_file
                                 unlock_sophomorix
                                 lock_sophomorix
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 backup_auk_file
                                 get_passwd_charlist
                                 get_plain_password
                                 check_options
                                 config_sophomorix_read
                                 result_sophomorix_init
                                 result_sophomorix_add
                                 result_sophomorix_add_summary
                                 result_sophomorix_check_exit
                                 result_sophomorix_print
                                 remove_from_list
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_create
                                 AD_bind_admin
                                 AD_dns_get
                                 AD_get_user
                                 AD_get_quota
                                 AD_user_kill
                                 AD_unbind_admin
                                 AD_object_search
                                 AD_user_create
                                 AD_group_create
                                 AD_group_kill
                                 AD_group_addmember
                                 AD_get_schoolname
                                 AD_get_name_tokened
                                 AD_class_fetch
                                 AD_project_fetch
                                 AD_group_update
                                 AD_project_sync_members
                                 AD_dn_fetch_multivalue
                                 AD_group_list
                                 AD_admin_list
                                 AD_get_passwd
                                 get_forbidden_logins
                                    );
my @arguments = @ARGV;

my $time_stamp_file=&time_stamp_file();
my $time_stamp_AD=&time_stamp_AD();

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================
# Variablen für Optionen
$Conf::log_level=1;
my $help=0;
my $info=0;
my $json=0;
my $school="";
my $user="";

$Conf::log_level=1;



# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "json|j+" => \$json,
           "verbose|v+" => \$Conf::log_level,
           "school|s=s" => \$school,
           "user|u=s" => \$user,
          );

my %sophomorix_result=&result_sophomorix_init("sophomorix-quota");
# Prüfen, ob Optionen erkannt wurden
&check_options($testopt,\%sophomorix_result,$json);

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin(\@arguments,\%sophomorix_result,$json);
my $root_dns=&AD_dns_get($root_dse);
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse,\%sophomorix_result);
my ($smb_admin_pass)=&AD_get_passwd($DevelConf::sophomorix_file_admin,
                                     $DevelConf::secret_file_sophomorix_file_admin);


# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-quota sets filesystem quota and mailquota

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info

  -s / --school <school>
  -u / --user

Please see the sophomorix-quota(8) man pages for full documentation
');
   print "\n";
   exit;
}



# create schoollist from options
# --school
my @schoollist=();
if ($school ne ""){
    if (exists $sophomorix_config{'SCHOOLS'}{$school}){
	push @schoollist,$school;
    } else {
        print "\nERROR: $school is not a school!\n\n";
	exit;
    }
} else {
    @schoollist=@{ $sophomorix_config{'LISTS'}{'SCHOOLS'} };
}



# --user user1,user2
my @userlist=();
if ($user ne ""){
    @userlist=split(/,/,$user);
}



# --info
if ($info==1){
    my $ref_quota=&AD_get_quota({ldap=>$ldap,
                                 root_dse=>$root_dse,
                                 root_dns=>$root_dns,
                                 sophomorix_config=>\%sophomorix_config,
                                });

	
        my $line="+--------------------------+--------+------+".
                 "------+------+-------------------+\n";


    #print Dumper($ref_quota);

    foreach my $school (@schoollist){
        if ($user eq ""){
            # use ALL sophomorix users
	    if (not exists $ref_quota->{'LISTS'}{'USER'}{$school}){
                @userlist=();
	    } else {
		# all users of school
		@userlist = @{ $ref_quota->{'LISTS'}{'USER'}{$school} };
	    }
        }

	print "\n";
        &Sophomorix::SophomorixBase::print_title("Quota of school $school:");
        if($#userlist==-1){
            print "     0 sophomorix users in school $school\n";
	    next;
	}
        print $line;
	printf "| %-25s| %-7s|%5s |%5s |%5s | %-18s|\n",
               "user(role:SCHOOLDEFAULT)",
               "share",
               "CALC",
               "USER",
               "CLASS",
               "PROJECTS";

	foreach my $user (@userlist){
	    if ($school ne 
                $ref_quota->{'QUOTA'}{'USERS'}{$user}{'USER'}{'sophomorixSchoolname'}){
                # skip users not in school that is processed
                next;
	    }
	    my $role=$ref_quota->{'QUOTA'}{'USERS'}{$user}{'USER'}{'sophomorixRole'};
	    my $quota_school=
              $sophomorix_config{'ROLES'}{$school}{$role}{'quota_default_school'};
	    my $quota_global=
              $sophomorix_config{'ROLES'}{$school}{$role}{'quota_default_global'};
            print $line;

	    # calc
	    my $calc=77;

            # uniquefi and sort sharelist
	    @{ $ref_quota->{'QUOTA'}{'USERS'}{$user}{'SHARELIST'} }= 
                uniq(@{ $ref_quota->{'QUOTA'}{'USERS'}{$user}{'SHARELIST'} });
	    @{ $ref_quota->{'QUOTA'}{'USERS'}{$user}{'SHARELIST'} }= 
                sort @{ $ref_quota->{'QUOTA'}{'USERS'}{$user}{'SHARELIST'} };
	    # walk through shares
	    foreach my $share (@{ $ref_quota->{'QUOTA'}{'USERS'}{$user}{'SHARELIST'} }){
                my $school_default;
		my $sharedisplay;
		if ($share eq $sophomorix_config{'INI'}{'VARS'}{'GLOBALSHARENAME'}){
                    $school_default=$quota_global;
		    $sharedisplay="GLOBAL";
#		} elsif ($share eq $DevelConf::name_default_school){
#                    $school_default=$quota_school;
#		    $sharedisplay="DEFLT";
		} elsif ($share eq $school){
                    $school_default=$quota_school;
		    $sharedisplay=$share;
		} else {
                    $school_default="---";                    
		    $sharedisplay=$share;
		}
		if ($share eq $DevelConf::name_default_school){
                    $sharedisplay="DEFLT";
		}
		my $quota_user;
		if (defined $ref_quota->{'QUOTA'}{'USERS'}{$user}{'USER'}
                                        {'sophomorixQuota'}{$share}){
		    $quota_user=$ref_quota->{'QUOTA'}{'USERS'}{$user}{'USER'}
		                            {'sophomorixQuota'}{$share};
		} else {
                    $quota_user="";
		}

		my $quota_class;
		if (defined $ref_quota->{'QUOTA'}{'USERS'}{$user}{'CLASS'}
                                        {'sophomorixQuota'}{$share}){
		    $quota_class=$ref_quota->{'QUOTA'}{'USERS'}{$user}{'CLASS'}
		                            {'sophomorixQuota'}{$share};
		} else {
                    $quota_class="";
		}
		
	        printf "| %-25s| %-7s|%5s |%5s |%5s | %-18s|\n",
                       "$user($role:$school_default)",
                       "$sharedisplay",
                       "CALC",
                       $quota_user,
                       $quota_class,
                       "PROJECTS";
	    }
	    

	}
	print $line;
        # print stuff from hash
        # print school
        # user | share | calc || | class | user | pro+pro+...+... 

        # im hash userlist erstellen (schulweise)
    }
    exit;
}


&result_sophomorix_check_exit(\%sophomorix_result,\%sophomorix_config,$json);
# ===========================================================================
# Start
# ===========================================================================
&log_script_start(\@arguments,\%sophomorix_result);


&AD_unbind_admin($ldap);
&log_script_end(\@arguments,\%sophomorix_result,\%sophomorix_config,$json);
############################################################
# End
############################################################



############################################################
# subs
############################################################
