#!/usr/bin/perl -w
# This script (sophomorix-extraclass) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# modules
use strict;
use Getopt::Long;
use Time::Local;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use List::MoreUtils qw(uniq);
use Net::LDAP;
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 
use JSON;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 unlock_sophomorix
                                 lock_sophomorix
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 backup_auk_file
                                 get_passwd_charlist
                                 get_plain_password
                                 check_options
                                 config_sophomorix_read
                                 result_sophomorix_init
                                 result_sophomorix_add
                                 result_sophomorix_check_exit
                                 result_sophomorix_print
                                 remove_from_list
                                 json_dump
                                 epoch_to_ymdhms
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_create
                                 AD_bind_admin
                                 AD_dns_get
                                 AD_unbind_admin
                                 AD_user_create
                                 AD_get_user
                                 AD_group_create
                                 AD_group_kill
                                 AD_group_addmember
                                 AD_get_schoolname
                                 AD_get_name_tokened
                                 AD_class_fetch
                                 AD_group_update
                                 AD_project_sync_members
                                 AD_dn_fetch_multivalue
                                 AD_get_passwd
                                 AD_get_groups_v
                                 AD_get_full_groupdata
                                    );
my @arguments = @ARGV;


############################################################
# Option handling
############################################################
my %options=();
# define possible action in a script and what OBJECT they need
$options{'CONFIG'}{'ACTION'}{'GROUP'}="create,".
                                      "kill,".
                                      "user-basename,".
                                      "user-number,".
                                      "comment,".
                                      "password,".
                                      "valid-until,".
                                      "description,";
                                      "school";

# define which options deliver which object
$options{'CONFIG'}{'ONE_OF'}{'GROUP'}="extraclass";
#$options{'CONFIG'}{'SINGLE'}{'ACTION'}="delete-all-empty-classes,delete-all-teacheronly-classes,update-maildomain";
## define option that can modify which object
#$options{'CONFIG'}{'MAYBE'}{'GROUP'}="all,".
#                                     "teacherclass,".
#                                     "adminclass,".
#                                     "extraclass,";
## define more dependencies
#$options{'CONFIG'}{'DEPENDS'}{'gidnumber-migrate'}="create";
#$options{'CONFIG'}{'DEPENDS'}{'skip-school-creation'}="create";

my $testopt=GetOptions(\%options, 
                       "help|h",
                       "info|i",
                       "json|j+",
                       "verbose|v+",
                       "create",
                       "kill",
                       "extraclass=s",
                       "user-basename=s",
                       "user-number=i",
                       "comment=s",
                       "password=s",
                       "valid-until=s",
                       "description=s",
                       "school=s",
                      );    

my %sophomorix_result=&result_sophomorix_init("sophomorix-extraclass");
# Prüfen, ob Optionen erkannt wurden
&check_options($testopt,\%sophomorix_result,$options{'json'},\%options);

if (not defined $options{'school'}){
    $options{'school'}="---";
}

my $class_type="extraclass";

print Dumper (\%options);

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin(\@arguments,\%sophomorix_result,$options{'json'});
my $root_dns=&AD_dns_get($root_dse);
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse,\%sophomorix_result);
my ($smb_admin_pass)=&AD_get_passwd($DevelConf::sophomorix_file_admin,
                                     $DevelConf::secret_file_sophomorix_file_admin);


# --help
#if ($help==1) {
if (defined $options{'help'}) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-extraclass creates and manages extraclasses

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose

  -i  / --info

Create an extraclass:
  --create
  --extraclass <gruppenname>
  --user-basename <basename>
  --user-number 30
  --comment "Für AK Linux"
  --password "......" (ohne: random??)
  --valid-until 10.10.2020

Please see the sophomorix-extraclass(8) man pages for full documentation
');
   print "\n";
   exit;
}


############################################################
# config values
############################################################
my %convert_extension = qw(
     1     01
     2     02
     3     03
     4     04
     5     05
     6     06
     7     07
     8     08
     9     09
);



&result_sophomorix_check_exit(\%sophomorix_result,\%sophomorix_config,$options{'json'});
############################################################
# Start
############################################################
&log_script_start(\@arguments,\%sophomorix_result,\%sophomorix_config);


if (defined $options{'create'} and 
    defined $options{'extraclass'} and
    defined $options{'user-basename'} and
    defined $options{'user-number'} and
    defined $options{'valid-until'}
   ){

    #testing date ?????
    my ($until_day, $until_month, $until_year)=split(/\./, $options{'valid-until'});
    my $extraclass_enddate_epoch=timelocal(0, 0, 0, $until_day, $until_month-1, $until_year);
    if ($extraclass_enddate_epoch>=$sophomorix_config{'DATE'}{'LOCAL'}{'EPOCH'}){
    } else {
        print "\nvalid-until is NOT in the future. Doing nothing!\n\n";
        exit;
    }
    my $extraclass_enddate_AD=$until_year.$until_month.$until_day."000000".".0Z";



    # ???????? fix this
    my $password="Muster!";

    my $group_token=&AD_get_name_tokened($options{'extraclass'},$options{'school'},$class_type);
    print "HERE create group $group_token $extraclass_enddate_AD \n";

    # weiter: gruppe anlegen, user anlegen

    &AD_school_create({ldap=>$ldap,
                       root_dse=>$root_dse,
                       root_dns=>$root_dns,
                       school=>$options{'school'},
                       smb_admin_pass=>$smb_admin_pass,
                       sophomorix_config=>\%sophomorix_config,
                       sophomorix_result=>\%sophomorix_result,
                     });
    &AD_group_create({ldap=>$ldap,
                      root_dse=>$root_dse,
                      root_dns=>$root_dns,
                      school=>$options{'school'},
                      group=>$group_token,
                      group_basename=>$options{'extraclass'},
                      description=>"created by sophomorix-extraclass",
                      type=>$class_type,
                      status=>"M",
	              sub_ou=>"OU=".$options{'extraclass'}.",".$sophomorix_config{'INI'}{'OU'}{'AD_student_ou'},
                      joinable=>"FALSE",
                      hidden=>"FALSE",
                      smb_admin_pass=>$smb_admin_pass,
                      sophomorix_config=>\%sophomorix_config,
                      sophomorix_result=>\%sophomorix_result,
                    });



    my $file;
    if ($options{'school'} eq "---"){
        $file="students.csv";
    } else {
        $file=$options{'school'}.".students.csv";
    }

    for (my $i=1;$i<=$options{'user-number'};$i++){
        my $extension;
        if (exists $convert_extension{$i}){
            $extension=$convert_extension{$i};
        } else {
            $extension=$i;
        }
        my $username=$options{'user-basename'}.$extension;

        &AD_user_create({ldap=>$ldap,
                        root_dse => $root_dse, 
                        root_dns => $root_dns, 
                        user_count => $i,
                        max_user_count => $options{'user-number'},
                        login => $username,
                        group => $group_token,
                        group_basename => $options{'extraclass'},
                        firstname_ascii => "Extra",
                        surname_ascii => "Class User",
                        firstname_utf8 => "Extra",
                        surname_utf8 => "Class User",
                        birthdate => "---",
                        sophomorix_first_password => $password,
                        unid => "---",
                        role => "student",
                        type => "extraclass",
                        school => $options{'school'},
                        tolerationdate => '---',
                        deactivationdate => $extraclass_enddate_AD,
                        status => "deaktivate",
                        file => $file,
                        smb_admin_pass=>$smb_admin_pass,
                        json=>$options{'json'},
                        webui_permissions_calculated=>$sophomorix_config{'ROLES'}{$options{'school'}}{'student'}{'UI'}{'WEBUI_PERMISSIONS'},
                        sophomorix_config=>\%sophomorix_config,
                        sophomorix_result=>\%sophomorix_result,
                       });
    }
}


############################################################
# End
############################################################
&AD_unbind_admin($ldap);
&log_script_end(\@arguments,\%sophomorix_result,\%sophomorix_config,$options{'json'});







