#!/usr/bin/perl -w
# This script (sophomorix-groupadd) is maintained by RÃ¼diger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or jeffbeck@linuxmuster.net


# Bibliotheken
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use Net::LDAP;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 time_stamp_AD
                                 time_stamp_file
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 check_options
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_bind_admin
                                 AD_unbind_admin
                                 AD_get_name_tokened
                                 AD_group_create
                                 AD_group_addmember
                                 AD_group_removemember
                                 AD_group_show_list
                                 get_forbidden_logins
                                    );

my @arguments = @ARGV;
my $time_stamp_AD=&time_stamp_AD();


# ===========================================================================
# Variablen
# ==========================================================================

my $help=0;
my $info=0;

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

$Conf::log_level=1;

my $ou="---";
my $school_token="---";

my $group="";
my $addmember="";
my $removemember="";

my $skiplock=0;

my $type=-1; # 3: domain group

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "verbose|v+" => \$Conf::log_level,
           "group=s" => \$group,
           "ou=s" => \$ou,
           "school-token=s" => \$school_token,
           "addmember=s" => \$addmember,
           "removemember=s" => \$removemember,
           "skiplock" => \$skiplock,
          );

# PrÃ¼fen, ob Optionen erkannt wurden, sonst Abbruch
&check_options($testopt);



# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlsbeschreibung
   print('
sophomorix-groupadd adds a group to samba 4 AD

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info
  --addmember member
  --removemember member

  --group name
  --group name --ou MYOU --school-token myo

Please see the sophomorix-groupadd(8) man pages for full documentation
');
   print "\n";
   exit;
}



my ($ldap,$root_dse) = &AD_bind_admin();

# --info
if ($info==1){
    &AD_group_show_list($ldap,$root_dse,"sophomorix-groupadd");
    exit;
}




# exit if options are missing
if ($group eq ""){ 
     print "\nThe option:\n";
     print "   --group name \n";
     print "is mandatory.\n\n";
     exit;
}

&log_script_start(@arguments);




my $group_token=&AD_get_name_tokened($group,$school_token,"sophomorix-groupadd");

# make sure group exists
&AD_group_create({ldap=>$ldap,
                  root_dse=>$root_dse, 
                  ou=>$ou,
                  school_token=>$school_token,
                  group=>$group_token,
                  description=>"Created by sophomorix-groupadd",
                  type=>"sophomorix-groupadd",
                  status=>"P",
                  creationdate=>$time_stamp_AD,
                });


# --removemember member
if ($removemember ne ""){
    &AD_group_removemember({ldap => $ldap, 
                            root_dse => $root_dse, 
                            group => $group,
                            removemember => $removemember,
                          });   
}


# --addmember member
if ($addmember ne ""){
    &AD_group_addmember({ldap => $ldap, 
                         root_dse => $root_dse, 
                         group => $group,
                         addmember => $addmember,
                       });   
}

&AD_unbind_admin($ldap);

&log_script_end(@arguments);
