#!/usr/bin/perl -w
# This script (sophomorix-managementgroup) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or jeffbeck@linuxmuster.net


# modules
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use Net::LDAP;
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 
use JSON;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 time_stamp_AD
                                 time_stamp_file
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 check_options
                                 config_sophomorix_read
                                 result_sophomorix_init
                                 result_sophomorix_add
                                 result_sophomorix_check_exit
                                 result_sophomorix_print
                                 json_dump
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_create
                                 AD_bind_admin
                                 AD_dns_get
                                 AD_unbind_admin
                                 AD_get_name_tokened
                                 AD_group_addmember
                                 AD_group_addmember_management
                                 AD_group_removemember
                                 AD_get_groups_v
                                 AD_get_full_groupdata
                                    );

my @arguments = @ARGV;
my $time_stamp_AD=&time_stamp_AD();


# ===========================================================================
# Variablen
# ==========================================================================

my $help=0;
my $info=0;
my $json=0;

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

$Conf::log_level=1;

my $school="---";

my $managementgroup="";

my $internet="";
my $intranet="";
my $wifi="";
my $webfilter="";
my $printing="";
my $admins="";

my $nointernet="";
my $nointranet="";
my $nowifi="";
my $nowebfilter="";
my $noprinting="";
my $noadmins="";

my $skiplock=0;

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "json|j+" => \$json,
           "verbose|v+" => \$Conf::log_level,
           "skiplock" => \$skiplock,
           "managementgroup|m=s" => \$managementgroup,
           "internet=s" => \$internet,
           "intranet=s" => \$intranet,
           "wifi=s" => \$wifi,
           "webfilter=s" => \$webfilter,
           "printing=s" => \$printing,
           "admins=s" => \$admins,
           "nointernet=s" => \$nointernet,
           "nointranet=s" => \$nointranet,
           "nowifi=s" => \$nowifi,
           "nowebfilter=s" => \$nowebfilter,
           "noprinting=s" => \$noprinting,
           "noadmins=s" => \$noadmins,
          );

my %sophomorix_result=&result_sophomorix_init("sophomorix-managementgroup");
# Prüfen, ob Optionen erkannt wurden, sonst Abbruch
&check_options($testopt,\%sophomorix_result,$json);

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin(\@arguments,\%sophomorix_result,$json);
my $root_dns=&AD_dns_get($root_dse);
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse,\%sophomorix_result);

# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlsbeschreibung
   print('
sophomorix-managementgroup adds/removes a user from a managementgroup

Options:
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info
  -i -m <groupname> / --info --managementgroup <groupname>

Examples 
  sophomorix-managementgroup  --internet  <user1,user2,...>   --nointernet  <user1,user2,...>
                              --wifi      <user1,user2,...>   --nowifi  <user1,user2,...>
                              --intranet  <user1,user2,...>   --nointranet  <user1,user2,...> 
                              --webfilter <user1,user2,...>   --nowebfilter <user1,user2,...> 
                              --printing  <user1,user2,...>   --noprinting  <user1,user2,...>
                              --admins    <user1,user2,...>   --noadmins <user1,user2,...>

Please see the sophomorix-managementgroup(8) man pages for full documentation
');
   print "\n";
   exit;
}

# --info
if ($info==1 and $managementgroup eq ""){
    my $ref_group_v=&AD_get_groups_v({ldap=>$ldap,
                                   root_dse=>$root_dse,
                                   root_dns=>$root_dns,
                                   school=>$school,
                                   sophomorix_config=>\%sophomorix_config,  
                                  });
    #print Dumper($ref_group_v);
    my $jsoninfo="MANAGEMENTGROUPS_OVERVIEW";
    my $jsoncomment="Managementgroup";
    &json_dump({json => $json,
                jsoninfo => $jsoninfo,
                jsoncomment => $jsoncomment,
                object_name => $school,
                log_level => $Conf::log_level,
                hash_ref => $ref_group_v,
                sophomorix_config => \%sophomorix_config,
               });
    exit;
}



if ($info==1 and $managementgroup ne ""){
    my $ref_groups=&AD_get_full_groupdata({ldap=>$ldap,
                                           root_dse=>$root_dse,
                                           root_dns=>$root_dns,
                                           grouplist=>$managementgroup,
                                           sophomorix_config=>\%sophomorix_config,
                                      });
    my $jsoninfo="MANAGEMENTGROUP";
    my $jsoncomment="Managementgroup";
    &json_dump({json => $json,
                jsoninfo => $jsoninfo,
                jsoncomment => $jsoncomment,
                object_name => $school,
                log_level => $Conf::log_level,
                hash_ref => $ref_groups,
                sophomorix_config => \%sophomorix_config,
               });
    exit;
}



&result_sophomorix_check_exit(\%sophomorix_result,\%sophomorix_config,$json);
&log_script_start(\@arguments,\%sophomorix_result);


############################################################
# add
############################################################

# --internet
if ($internet ne ""){
    &manage_groupmemberships("internet","add",$internet);
}


# --intranet
if ($intranet ne ""){
    &manage_groupmemberships("intranet","add",$intranet);
}


# --wifi
if ($wifi ne ""){
    &manage_groupmemberships("wifi","add",$wifi);
}


# --webfilter
if ($webfilter ne ""){
    &manage_groupmemberships("webfilter","add",$webfilter);
}


# --printing
if ($printing ne ""){
    &manage_groupmemberships("printing","add",$printing);
}


# --admins
if ($admins ne ""){
    &manage_groupmemberships("admins","add",$admins);
}






############################################################
# remove
############################################################

# --nointernet
if ($nointernet ne ""){
    &manage_groupmemberships("internet","remove",$nointernet);
}


# --nointranet
if ($nointranet ne ""){
    &manage_groupmemberships("intranet","remove",$nointranet);
}


# --nowifi
if ($nowifi ne ""){
    &manage_groupmemberships("wifi","remove",$nowifi);
}


# --nowebfilter
if ($nowebfilter ne ""){
    &manage_groupmemberships("webfilter","remove",$nowebfilter);
}


# --noprinting
if ($noprinting ne ""){
    &manage_groupmemberships("printing","remove",$noprinting);
}


# --noadmins
if ($noadmins ne ""){
    &manage_groupmemberships("admins","remove",$noadmins);
}

&AD_unbind_admin($ldap);

&log_script_end(\@arguments,\%sophomorix_result,\%sophomorix_config,$json);




############################################################
# sub
############################################################

sub manage_groupmemberships {
    my ($basegroup,$action,$groupstring)=@_;
    my @users=split(/,/,$groupstring);
    foreach my $user (@users){
        my $filter="(&(objectclass=user) (name=".$user."))";
        my $mesg = $ldap->search(
                          base   => $root_dse,
                          scope => 'sub',
                          filter => $filter,
                          attr => ['cn','sophomorixSchoolname']
                            );

        my $count = $mesg->count;
        if ($count==0){
            &log_script_exit("ERROR: Could not find user $user",1,1,0,\@arguments,\%sophomorix_result,\%sophomorix_config,$json);
        }
        my $entry = $mesg->entry(0);
        my $school = $entry->get_value('sophomorixSchoolname');
        print "USER: $user is in school $school\n";
        
        my $group=&AD_get_name_tokened($basegroup,$school,"management");
        print "      group is $group\n";
	if ($action eq "remove"){
            print "      $user --> $group ($action)\n";

            &AD_group_removemember({ldap => $ldap, 
                                    root_dse => $root_dse, 
                                    group => $group,
                                    removemember => $user,
                                  });   

        } elsif ($action eq "add"){
            print "      $user --> $group ($action)\n";
 
            &AD_group_addmember_management({ldap => $ldap, 
                                            root_dse => $root_dse, 
                                            group => $group,
                                            addmember => $user,
                                           });  
        }
   }
}
