#!/usr/bin/perl -w
# This script (sophomorix-ui) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# modules
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use List::MoreUtils qw(uniq);
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 
use Net::LDAP;
use JSON;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 time_stamp_AD
                                 time_stamp_file
                                 unlock_sophomorix
                                 lock_sophomorix
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 backup_auk_file
                                 get_passwd_charlist
                                 get_plain_password
                                 check_options
                                 config_sophomorix_read
                                 result_sophomorix_init
                                 result_sophomorix_add
                                 result_sophomorix_add_summary
                                 result_sophomorix_check_exit
                                 result_sophomorix_print
                                 console_print_quota_user
                                 console_print_mailquota_user
                                 remove_from_list    
                                 json_dump
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_create
                                 AD_bind_admin
                                 AD_dns_get
                                 AD_get_user
                                 AD_get_ui
                                 AD_get_quota
                                 AD_user_kill
                                 AD_unbind_admin
                                 AD_object_search
                                 AD_user_create
                                 AD_user_update
                                 AD_user_setquota
                                 AD_group_create
                                 AD_group_kill
                                 AD_group_addmember
                                 AD_get_schoolname
                                 AD_get_name_tokened
                                 AD_group_update
                                 AD_project_sync_members
                                 AD_dn_fetch_multivalue
                                 AD_get_passwd
                                    );
my @arguments = @ARGV;

my $time_stamp_file=&time_stamp_file();
my $time_stamp_AD=&time_stamp_AD();

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================
# Variablen für Optionen
$Conf::log_level=1;

my $help=0;
my $info=0;
my $json=0;
my $school="";
my $force=0;
my $user="";
$Conf::log_level=1;



# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "json|j+" => \$json,
           "verbose|v+" => \$Conf::log_level,
           "school=s" => \$school,
           "force|f" => \$force,
          );

my %sophomorix_result=&result_sophomorix_init("sophomorix-ui");
# Prüfen, ob Optionen erkannt wurden
&check_options($testopt,\%sophomorix_result,$json);

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin(\@arguments,\%sophomorix_result,$json);
my $root_dns=&AD_dns_get($root_dse);
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse,\%sophomorix_result);
my ($smb_admin_pass)=&AD_get_passwd($DevelConf::sophomorix_file_admin,
                                     $DevelConf::secret_file_sophomorix_file_admin);


# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print('
sophomorix-ui sets the AD Attributes for user interfaces.

Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose

  -i  (show what would be updated)
  --school <school1>,<school2>,...

  --force  (update every user)

Please see the sophomorix-ui(8) man pages for full documentation
');
   print "\n";
   exit;
}

&result_sophomorix_check_exit(\%sophomorix_result,\%sophomorix_config,$json);


# create schoollist from options
# --school <school>
my @schoollist=();
if ($school ne ""){
    if (exists $sophomorix_config{'SCHOOLS'}{$school}){
	push @schoollist,$school;
    } else {
        print "\nERROR: $school is not a school!\n\n";
	exit;
    }
} else {
    # without option use all schools
    @schoollist=@{ $sophomorix_config{'LISTS'}{'SCHOOLS'} };
}




my $ref_ui=&AD_get_ui({ldap=>$ldap,
                       root_dse=>$root_dse,
                       root_dns=>$root_dns,
                       sophomorix_config=>\%sophomorix_config,
                     });


if ($info==1){
    &json_dump({json => $json,
                jsoninfo => "UI",
                jsoncomment => "sophomorix ui",
                object_name => $school,
                log_level => $Conf::log_level,
                hash_ref=>$ref_ui,
                sophomorix_config=>\%sophomorix_config,
              });
    exit;
}


# --force
my $list_type="LISTS_UPDATE"; # use update lists
if ($force==1){
    # use lists with all users
    $list_type="LISTS";
}




# ===========================================================================
# Start
# ===========================================================================
&log_script_start(\@arguments,\%sophomorix_result);

my $max_user_count=0;
my $user_count=0;
if ($school ne ""){
    # walk through all schools, count by schools
    # count users
    foreach my $school (@schoollist){
        if (exists $ref_ui->{$list_type}{'USER_by_sophomorixSchoolname'}{$school}){
	    print "$ref_ui->{$list_type}{'USER_by_sophomorixSchoolname'}{$school}\n";
	    $max_user_count=$max_user_count
		            +$#{ $ref_ui->{$list_type}{'USER_by_sophomorixSchoolname'}{$school} }
                            +1;
        }
    }
    if ($max_user_count==0){
        print "\n0 SophomorixWebuiPermissionsCalculated updates in schools $school\n\n";
    }
    foreach my $school (@schoollist){
        &Sophomorix::SophomorixBase::print_title("Setting ui attribute for school $school:");
        foreach my $user (@{ $ref_ui->{$list_type}{'USER_by_sophomorixSchoolname'}{$school} }){
            $user_count++;
            &AD_user_update({ldap=>$ldap,
                             root_dse=>$root_dse,
                             dn=>$ref_ui->{'UI'}{'USERS'}{$user}{'dn'},
                             user=>$user,
                             webui_permissions_calculated=>$ref_ui->{'UI'}{'USERS'}{$user}{'CALCTRUELIST'},
                             user_count=>$user_count,
                             max_user_count=>$max_user_count,
                             json=>$json,
                             sophomorix_config=>\%sophomorix_config,
                             sophomorix_result=>\%sophomorix_result,
                           });
        }
    }
} else {
    # walk through all users
    $max_user_count=$#{ $ref_ui->{$list_type}{'USERS'} }+1;
    foreach my $user (@{ $ref_ui->{$list_type}{'USERS'} }){
        $user_count++;
        &AD_user_update({ldap=>$ldap,
                         root_dse=>$root_dse,
                         dn=>$ref_ui->{'UI'}{'USERS'}{$user}{'dn'},
                         user=>$user,
                         webui_permissions_calculated=>$ref_ui->{'UI'}{'USERS'}{$user}{'CALCTRUELIST'},
                         user_count=>$user_count,
                         max_user_count=>$max_user_count,
                         json=>$json,
                         sophomorix_config=>\%sophomorix_config,
                         sophomorix_result=>\%sophomorix_result,
                       });
    }
}


&result_sophomorix_add_summary({
                     NAME=>"UPDATED UI", 
                     RESULT=>$user_count, 
                     RESULT_TYPE => "integer",
                     DESCRIPTION_POST => "user ui updated", 
                     DESCRIPTION_PRE => " user ui updated", 
                     FORMAT_TYPE => 1,
                     sophomorix_result=>\%sophomorix_result,
			       });



&AD_unbind_admin($ldap);
&log_script_end(\@arguments,\%sophomorix_result,\%sophomorix_config,$json);
############################################################
# End
############################################################



############################################################
# subs
############################################################
