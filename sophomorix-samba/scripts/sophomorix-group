#!/usr/bin/perl -w
# This script (sophomorix-group) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or jeffbeck@linuxmuster.net


# Bibliotheken
use strict;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
use Net::LDAP;
use Sophomorix::SophomorixBase qw(
                                 print_line
                                 print_title
                                 time_stamp_AD
                                 time_stamp_file
                                 log_script_start
                                 log_script_end
                                 log_script_exit
                                 check_options
                                 config_sophomorix_read
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_school_add
                                 AD_bind_admin
                                 AD_unbind_admin
                                 AD_get_name_tokened
                                 AD_group_create
                                 AD_group_kill
                                 AD_group_addmember
                                 AD_group_removemember
                                 AD_group_list
                                 get_forbidden_logins
                                    );

my @arguments = @ARGV;
my $time_stamp_AD=&time_stamp_AD();


# ===========================================================================
# Variablen
# ==========================================================================

my $help=0;
my $info=0;

# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

$Conf::log_level=1;

my $school="---";

my $group="";
my $create=0;
my $kill=0;
my $addmember="";
my $removemember="";
my $creategroup="";
my $addgroup="";
my $removegroup="";

my $skiplock=0;

my $type=-1; # 3: domain group

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "info|i" => \$info,
           "verbose|v+" => \$Conf::log_level,
           "group=s" => \$group,
           "create" => \$create,
           "kill" => \$kill,
           "school=s" => \$school,
           "addmember=s" => \$addmember,
           "removemember=s" => \$removemember,
           "addgroup=s" => \$addgroup,
           "removegroup=s" => \$removegroup,
           "skiplock" => \$skiplock,
          );

# Prüfen, ob Optionen erkannt wurden, sonst Abbruch
&check_options($testopt);

# Reading Configuration
my ($ldap,$root_dse) = &AD_bind_admin();
my %sophomorix_config=&config_sophomorix_read($ldap,$root_dse);

# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlsbeschreibung
   print('
sophomorix-group adds/modifies/deletes a group in samba 4 AD

Options:
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info

  --create --group name
  --create --group name  --school myo

  --kill --group --group name

  --addmember user
  --removemember user

  --addgroup group
  --removegroup group

Examples:
  Add/remove a user to/from a group:
  sophomorix-group --addmember <user> --group <internet|wifi|*-internet|*-wifi>
  sophomorix-group --removemember <user> --group <internet|wifi|*-internet|*-wifi>

Please see the sophomorix-group(8) man pages for full documentation
');
   print "\n";
   exit;
}



# --info
if ($info==1){
    &AD_group_list($ldap,$root_dse,"sophomorix-group",1);
    exit;
}




# # exit if options are missing
# if ($group eq ""){ 
#      print "\nThe option:\n";
#      print "   --group name \n";
#      print "is mandatory.\n\n";
#      exit;
# }

&log_script_start(@arguments);





# --create --group <name>
############################################################
if ($create==1 and $group ne ""){
    &AD_school_add({ldap=>$ldap,
                    root_dse=>$root_dse,
                    school=>$school,
                    creationdate=>$time_stamp_AD,
                    sophomorix_config=>\%sophomorix_config,
                  }); 
    my $group_token=&AD_get_name_tokened($group,$school,"sophomorix-group");
    &AD_group_create({ldap=>$ldap,
                      root_dse=>$root_dse, 
                      school=>$school,
                      group=>$group_token,
                      group_basename=>$group,
                      description=>"Created by sophomorix-group",
                      type=>"sophomorix-group",
                      status=>"P",
                      creationdate=>$time_stamp_AD,
                    });
}


# --kill --group <name>
############################################################
if ($kill==1 and $group ne ""){
  my $group_token=&AD_get_name_tokened($group,$school,"sophomorix-group");
  &AD_group_kill({ldap=>$ldap,
                  root_dse=>$root_dse,
                  group=>$group_token,
                  type=>"sophomorix-group",
                  });
}



# --removemember member
if ($removemember ne ""){
    &AD_group_removemember({ldap => $ldap, 
                            root_dse => $root_dse, 
                            group => $group,
                            removemember => $removemember,
                          });   
}


# --addmember member
if ($addmember ne ""){
    &AD_group_addmember({ldap => $ldap, 
                         root_dse => $root_dse, 
                         group => $group,
                         addmember => $addmember,
                       });   
}

# --removegroup group
if ($removegroup ne ""){
    &AD_group_removemember({ldap => $ldap, 
                            root_dse => $root_dse, 
                            group => $group,
                            removegroup => $removegroup,
                          });   
}


# --addgroup group
if ($addgroup ne ""){
    &AD_group_addmember({ldap => $ldap, 
                         root_dse => $root_dse, 
                         group => $group,
                         addgroup => $addgroup,
                       });   
}

&AD_unbind_admin($ldap);

&log_script_end(@arguments);
