#!/usr/bin/perl -w
# This script (sophomorix-query) is maintained by Rüdiger Beck
# It is Free Software (License GPLv3)
# If you find errors, contact the author
# jeffbeck@web.de  or  jeffbeck@linuxmuster.net

# modules
use strict;
#use Quota;
use Getopt::Long;
Getopt::Long::Configure ("bundling");
use Sophomorix::SophomorixConfig;
#use IMAP::Admin;
#use DBI;
use Net::LDAP;
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Useqq = 1;
$Data::Dumper::Terse = 1; 

use Sophomorix::SophomorixBase qw(
                                 );
use Sophomorix::SophomorixSambaAD qw(
                                 AD_bind_admin
                                 AD_unbind_admin
                                    );

# Parsen der Optionen
my %options=();
$Conf::log_level=1; # remove later
my $testopt=GetOptions(\%options, 
                        "help|h",
                        "sam|sAMAccountName=s",
                        "sn=s",
                        "gn|givenName=s",
                        "anyname=s",
                        "student",
                        "teacher",
                        "examuser",
                        "globaladministrator",
                        "schooladministrator",
                        "globalbinduser",
                        "schoolbinduser",
                        "computer",
                        "adminclass",
                        "extraclass",
                        "teacherclass",
                        "class",
                        "project",
                        "sophomorix-group",
                        "room",
                        "schoolbase=s",
                        "samonly",
                        "basic",
                        "full",
    );

if ($testopt==0){
    print "Option Error";
    exit;
}


if (defined $options{'class'}){
    # find the group types
    $options{'adminclass'}=1;
    $options{'extraclass'}=1;
    $options{'teacherclass'}=1;
}



# Prüfen, ob Optionen erkannt wurden, sonst Abbruch
#&check_options($testopt);

# --help
if (defined $options{'help'}) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlsbeschreibung
   print('
sophomorix-query is a performance optimised was to query AD for users, computers and groups.

Searches are case insensitive:
  --sam GasT      will find Gast,GAST, .....

If you use the following wildcardcharacters, put them in quotation marks:
  --sam "g*"       finds all sAMAccountName that beginn with g



Options
  -h  / --help
  -v  / --verbose
  -vv / --verbose --verbose
  -i  / --info
  --filter: show the filter that is used

Search attribute(s) to find a user/group/computer:
(multiple options are connected with & to narrow down the search)
--sam|sAMAccountName <string> 
--sn <string>
--gn|givenName  <string>
# Later
--anyname <string>      (All important name fields: sAMAccountName,sn,givenName, ...)

Limit the query for sophomorix users to a certain sophomorixRole:
(multiple options are connected with | to accumulate the results)
--student               (sophomorixRole=student)
--teacher               (sophomorixRole=teacher)
--examuser              (sophomorixRole=examuser)
--globaladministrator   (sophomorixRole=globaladministrator)
--schooladministrator   (sophomorixRole=schooladministrator)
--globalbinduser        (sophomorixRole=globalbinduser)
--schoolbinduser        (sophomorixRole=schoolbinduser)
--computer              (sophomorixRole=computer)

Limit the query for sophomorix groups to a certain sophomorixType:
(multiple options are connected with | to accumulate the results)
--adminclass          (sophomorixType=adminclass)
--extraclass          (sophomorixType=extraclass)
--teacherclass        (sophomorixType=teacherclass)
--class               (| (sophomorixType=adminclass)(sophomorixType=extraclass)(sophomorixType=teacherclass) )
--project             (sophomorixType=project)
--sophomorix-group    (sophomorixType=sophomorix-group)
--room                (sophomorixType=room)

Performance improvements:

Limit the searchbase (this is faster):
--schoolbase <school> (limit the searchbase to one school or global)
  # Later:
  --sub-projectbase (only works together with schoolbase)


What user attributes to return:
--samonly    (i. E. for dropdown menues)
--basic      (default)
--full       (all attributes)
--members    (add members if object is a group)


What group attributes to return:
--grp-samonly      (i. E. for dropdown menues)
--grp-basic        (default)
--grp-full         (all attributes)
--grp-members      (add members if object is a group)


What computer attributes to return:
--comp-samonly    (i. E. for dropdown menues)
--comp-basic      (default)
--comp-full       (all attributes)
--what more?


Maybe:
What to query (objectclass, should be implied with the options above):
--oc-user      (an object with the objectclass user)
--oc-group     (an object with the objectclass group)
--oc-computer  (an object with the objectclass computer)
--> Ist this faster?


Examples:
  Search for all adminclasses and extraclassses of a school for dropdown menue:
  sophomorix-query --schoolbase <school> --extraclass --adminclass --samonly

  Search for all users (with data for listing) in a group with the name <7a>:
  sophomorix-query --schoolbase <school> --sam 7a --grp-samonly --group-members --full


Please see the sophomorix-query(8) man pages for full documentation
');
   print "\n";
   exit;
}


my ($ldap,$root_dse) = &AD_bind_admin();

############################################################




my $filter;
my $base;
my $scope;
my $search_object="all";

my $mesg;




if (defined $options{'schoolbase'}){
    if ($options{'schoolbase'} eq "global"){
        $base="OU=GLOBAL,".$root_dse;
    } else {
        $base="OU=".$options{'schoolbase'}.",OU=SCHOOLS,".$root_dse;
    }
} else {
    $base=$root_dse;
}

$scope="sub";

# ( & (attr_filter) (role_filter) (type_filter) )


$filter="(& ";

############################################################
# attribute filter
my $attr_filter="";
if (defined $options{'sam'} or 
    defined $options{'sn'} or 
    defined $options{'gn'}){
    ###
    $attr_filter=$attr_filter."(& ";
    if (defined $options{'sam'}){
        $attr_filter=$attr_filter."(sAMAccountName=".$options{'sam'}.")";
    }
    if (defined $options{'sn'}){
        $attr_filter=$attr_filter."(sn=".$options{'sn'}.")";
    }
    if (defined $options{'gn'}){
        $attr_filter=$attr_filter."(givenName=".$options{'gn'}.")";
    }
    $attr_filter=$attr_filter." )";
}

############################################################
# role filter
my $role_filter="";
if (defined $options{'student'} or 
    defined $options{'teacher'} or 
    defined $options{'examuser'} or 
    defined $options{'globaladministrator'} or 
    defined $options{'schooladministrator'} or 
    defined $options{'globalbinduser'} or 
    defined $options{'schoolbinduser'} or 
    defined $options{'computer'}){
    ###
    $role_filter=$role_filter."(| ";
    if (defined $options{'student'}){
        $role_filter=$role_filter."(sophomorixRole=student)";
        $search_object="user";
    }
    if (defined $options{'teacher'}){
        $role_filter=$role_filter."(sophomorixRole=teacher)";
        $search_object="user";
    }
    if (defined $options{'examuser'}){
        $role_filter=$role_filter."(sophomorixRole=examuser)";
        $search_object="user";
    }
    if (defined $options{'globaladministrator'}){
        $role_filter=$role_filter."(sophomorixRole=globaladministrator)";
        $search_object="user";
    }
    if (defined $options{'schooladministrator'}){
        $role_filter=$role_filter."(sophomorixRole=schooladministrator)";
        $search_object="user";
    }
    if (defined $options{'globalbinduser'}){
        $role_filter=$role_filter."(sophomorixRole=globalbinduser)";
        $search_object="user";
    }
    if (defined $options{'schoolbinduser'}){
        $role_filter=$role_filter."(sophomorixRole=schoolbinduser)";
        $search_object="user";
    }
    if (defined $options{'computer'}){
        $role_filter=$role_filter."(sophomorixRole=computer)";
        $search_object="computer";
    }
    $role_filter=$role_filter." )";
}


############################################################
# type filter
my $type_filter="";
if (defined $options{'adminclass'} or 
    defined $options{'extraclass'} or 
    defined $options{'teacherclass'} or 
    defined $options{'project'} or 
    defined $options{'sophomorix-group'} or 
    defined $options{'room'}){
     ###
    $type_filter=$type_filter."(| ";
    if (defined $options{'adminclass'}){
        $type_filter=$type_filter."(sophomorixType=adminclass)";
        $search_object="group";
    }
    if (defined $options{'extraclass'}){
        $type_filter=$type_filter."(sophomorixType=extraclass)";
        $search_object="group";
    }
    if (defined $options{'teacherclass'}){
        $type_filter=$type_filter."(sophomorixType=)";
        $search_object="group";
    }
    if (defined $options{'project'}){
        $type_filter=$type_filter."(sophomorixType=project)";
        $search_object="group";
    }
    if (defined $options{'sophomorix-group'}){
        $type_filter=$type_filter."(sophomorixType=sophomorix-group)";
        $search_object="group";
    }
    if (defined $options{'room'}){
        $type_filter=$type_filter."(sophomorixType=room)";
        $search_object="group";
    }
    $type_filter=$type_filter." )";
}



############################################################
# combine the filters
$filter="(& ".
        "".$attr_filter."".
        "".$role_filter."".
        "".$type_filter."".
        " )";





my $all_attrs;
my $attrs;
my $grp_attrs;
my $comp_attrs;




############################################################
# do the search
$mesg = $ldap->search( # perform a search
                      base   => $base,
                      scope => $scope,
                      filter => $filter,
                      attrs => $attrs,
                      );

# debugging
print Dumper (\%options);
print "BASE:       $base\n";
print "SCOPE:      $scope\n";
print "FILTER:     $filter\n";
print "SEARCH FOR: $search_object\n";

        my $max = $mesg->count; 
        print "$max Results\n";
        for( my $index = 0 ; $index < $max ; $index++) {
            my $entry = $mesg->entry($index);
            my $dn = $entry->dn();
            my $sam=$entry->get_value('sAMAccountName');
            my $role=$entry->get_value('sophomorixRole');
            my $type=$entry->get_value('sophomorixType');
            my $s_objectclass;
            if (defined $role){
                if ($role eq "computer"){
                    $s_objectclass="computer";
                } else {
                    $s_objectclass="user";
                }
            }
            if (defined $type){
                    $s_objectclass="group";
            }
            print "   * $sam (sophomorix objectclass=$s_objectclass)\n";

        }




# TODO ?????
# search for abjectclass


if ($search_object eq "user"){
    # set list of search attributes, depending on options
    if (defined $options{'samonly'}){
        # user
        $attrs=['sAMAccountName'];
    } elsif (defined $options{'basic'}){
        $attrs=['sAMAccountName',
                'sophomorixRole'];
    } elsif (defined $options{'full'}){
        $attrs=['sAMAccountName',
                'sophomorixRole'];
    }




    # do the search, include objectclass

    # skip nonsophomorix-objects

    # create json object

} elsif ($search_object eq "group"){
    # set list of search attributes, depending on options
    if (defined $options{'grp-samonly'}){
        # user
        $attrs=['sAMAccountName'];
    } elsif (defined $options{'grp-basic'}){
        $attrs=['sAMAccountName',
                'sophomorixType'];
    } elsif (defined $options{'grp-full'}){
        $attrs=['sAMAccountName',
                'sophomorixType'];
    }

    # do the search, include objectclass

    # skip nonsophomorix-objects

    # create json object

    # add members, if option is given

} elsif ($search_object eq "computer"){
    # set list of search attributes, depending on options

    # do the search, include objectclass

    # skip nonsophomorix-objects

    # create json object


} elsif ($search_object eq "all"){
    # show non sophomorix users also
}






############################################################
# END: Test code goes here
############################################################

&AD_unbind_admin($ldap);

